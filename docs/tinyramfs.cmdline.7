.\" Generated by scdoc 1.11.0
.\" Complete documentation for this program is not available as a GNU info page
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.nh
.ad l
.\" Begin generated content:
.TH "tinyramfs.cmdline" "7" "2020-11-13"
.P
.SH NAME
.P
Tinyramfs - kernel command-line parameters
.P
.SH DESCRIPTION
.P
Tinyramfs provides a way to control configuration dynamically via
kernel parameters without needing to regenerate initramfs image.\& 
.P
.SS MAN PAGE SYNTAX
.P
.nf
.RS 4
|   - OR
\&.\&.\&. - can be repeated
.fi
.RE
.P
.SH GENERAL PARAMETERS
.P
\fBdebug\fR=1
.P
.RS 4
Enable debug mode.\&
.P
.RE
\fBbreak\fR=breakpoint
.P
.RS 4
Specify breakpoint where shell should be invoked.\& Useful for
debugging.\& List of builtin breakpoints:
.P
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
root
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
boot

.RE
.P
Hooks can provide their own breakpoints.\& See source code of hooks
for more information.\&
.P
.RE
\fBroot\fR=UUID|LABEL|/dev/*|PARTUUID
.P
.RS 4
Specify which way tinyramfs will use to look up root filesystem.\&
.P
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
UUID     - lookup device by uuid
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
LABEL    - lookup device by label
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
/dev/*   - lookup device by full path
.RE
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.IP \(bu 4
.\}
PARTUUID - lookup device by partition uuid

.RE
.P
Initramfs must contain \fBblkid\fR(8) for ability to use UUID, LABEL,
PARTUUID.\& Note that PARTUUID only supported in util-linux \fBblkid\fR(8).\&
.P
.RE
\fBroot_type\fR|\fBrootfstype\fR=type
.P
.RS 4
Explicitly set root filesystem type.\& Kernel must support specified type.\&
.P
.RE
\fBrootdelay\fR=delay
.P
.RS 4
Specify maximum number of seconds to wait for root device.\& Default is 30.\&
.P
.RE
\fBroot_opts\fR|\fBrootflags\fR=opts
.RS 4
.P
See \fBfstab\fR(5) fourth field.\&
.P
.RE
.SH HOOKS PARAMETERS
.P
Initramfs must contain appropriate hooks for ability to use below parameters.\&
.P
.SS LIVE
.P
\fBlive_disk\fR=LABEL
.P
.RS 4
Specify LABEL from the live disk to boot from.
.P
.RE
\fBlive_img_file\fR=/path/to/pseudo-fs
.P
.RS 4
Specify location to the pseudo-fs image file.
.P
.RE
\fBlive_ram_opts\fR=opts
.P
.RS 4
Options for ram mountpoint.
.P
.RE
\fBlive_sfs_opts\fR=opts
.P
.RS 4
Options for pseudo-fs mountpoint.
.P
.RE
.SS LVM
.P
\fBlvm_tag\fR=tag
.P
.RS 4
Specify LVM tag which will be used to trigger LVM.\& This option will be
ignored if \fBlvm_name\fR/\fBlvm_group\fR was specified.\&
.P
.RE
\fBlvm_name\fR=name
.P
.RS 4
Specify LVM name which will be used to trigger LVM.\& \fBlvm_group\fR must be
specified.\&
.P
.RE
\fBlvm_group\fR=group
.P
.RS 4
Specify LVM group which will be used to trigger LVM.\&
.P
.RE
\fBlvm_discard\fR=1
.P
.RS 4
Pass issue_discards to lvm.\& Leave empty to disable.\& Useful for SSD's.\&
.P
.RE
.SS LUKS
.P
\fBluks_name\fR=name
.P
.RS 4
Specify which name will be registered to mapping table after cryptsetup
unlocks LUKS root.\&
.P
.RE
\fBluks_root\fR=UUID|LABEL|/dev/*|PARTUUID
.P
.RS 4
See \fBroot\fR for details.\&
.P
.RE
\fBluks_discard\fR=1
.P
.RS 4
Pass --allow-discards to \fBcryptsetup\fR.\& Leave empty to disable.\& Useful for
SSD's, but you must know that security will be decreased.\&
.P
.RE
.SH EXAMPLES
.P
.SS ROOT
.P
.nf
.RS 4
vmlinuz initrd=initramfs root=/dev/sda1 \&.\&.\&.
.fi
.RE
.P
.SS DISABLE DISCARD
.P
.nf
.RS 4
vmlinuz initrd=\\initramfs luks_discard= lvm_discard= \&.\&.\&.
.fi
.RE
.P
.SS PASS ARGUMENTS TO REAL INIT
.P
.nf
.RS 4
vmlinuz initrd=\\initramfs \&.\&.\&. -- args
.fi
.RE
.P
.SS BOOT FROM RAM IN LIVE CD
.nf
.RS 4
vmlinuz initrd=\\initramfs ram
.fi
.RE
.P
.SH SEE ALSO
.P
\fBtinyramfs\fR(8) \fBtinyramfs.\&config\fR(5) \fBtinyramfs.\&hooks\fR(7)
